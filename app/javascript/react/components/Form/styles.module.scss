@use "~/styles/variables" as *;

.container {
  position: relative;
  width: 100%;
}

.label {
  top: 13px;
  position: absolute;
  color: $gray-400;
  padding: 0 $spacing;
  left: 0;
  pointer-events: none;
  z-index: 1;
  transition: all 300ms ease;
}

.labelTop {
  position: absolute;
  background: $white;
  padding: 0 10px;
  color: $gray-600;
  top: -7px;
  left: 7px;
  font-size: $xSmall;
  padding: 0 5px;
  z-index: 1;
  transition: all 300ms ease;
}

.labelTopBold {
  font-weight: 700;
}

.marginRight {
  margin-right: $spacing;
}

.marginBottom {
  margin-bottom: $spacing;
}

.control {
  position: relative;
  -moz-appearance: none; /* Firefox */
  -webkit-appearance: none; /* Safari and Chrome */
  appearance: none;
  border: 1px solid $gray-400;
  border-radius: $radius;
  padding: $spacing;
  padding-right: $spacing-large;
  outline: none;
  width: 100%;
  height: 55px;
  font-weight: 400;
  font-size: 16px;
  line-height: 24px;
  color: #1a202c;
  background: $white;
  &[disabled] {
    background-color: #eee;
    cursor: not-allowed;
  }

  &:focus {
    border-width: 1.5px;
    border-color: $gray-600;
  }
}

.control .option {
  font-weight: 400;
  font-size: 16px;
  line-height: 24px;
  color: #1a202c;
  margin-top: 7px;
  margin-bottom: 7px;
  margin-left: 8px;
  margin-right: 18px;
}

.downArrow {
  position: absolute;
  top: 22px;
  right: $spacing;
  z-index: 1;
  transition: all 300ms ease;
  transform: rotate(0);

  & > svg {
    display: block;
  }
}

.upArrow {
  transition: all 300ms ease;
  transform: rotate(180deg);
}

.selectControl {
  font-size: 13px;
  min-width: 120px;
}

.error {
  display: inline;
  color: $error;
  font-size: $xSmall;
}

.input {
  display: block;
  position: relative;
  margin-bottom: $spacing;

  &Nomargin {
    margin-bottom: 0;
  }

  &Focused,
  &Filled,
  &Error {
    .label {
      transition: all 300ms ease;
      background: $white;
      padding: 0 10px;
      top: -10px;
      left: 7px;
      transform: translateY(0);
      font-size: $xSmall;
      padding: 0 5px;
    }
  }

  &Error {
    .label {
      color: $error;
    }

    .control {
      border-color: $error;
    }
  }

  &Focused {
    .label {
      color: $primary;
    }

    .control {
      border-color: $primary;
      box-shadow: 0 0 0 2px rgba($primary, 0.2);
    }
  }

  &Filled {
    .label {
      color: $gray-600;
    }

    .control {
      border-color: $gray-500;
    }
  }
}

ul.optionsList {
  cursor: pointer;
  border: 1px solid #cbd5e0;
  border-radius: 5px;
  position: absolute;
  z-index: 999;
  background-color: #fff;
  width: 100%;
}

.optionItem {
  cursor: pointer;
  border-bottom: 1px solid #cbd5e0;
  padding: 4px 16px;
}

.optionItem:hover {
  background-color: #cbd5e0;
}

.arrow {
  position: absolute;
  border: solid #cbd5e0;
  border-width: 0 2px 2px 0;
  display: inline-block;
  padding: 3px;
  right: 15px;
  top: 50%;
  margin-top: -5px;
}

.down {
  transform: rotate(45deg);
  -webkit-transform: rotate(45deg);
}

.btnCheckbox {
  border: 1px solid $gray-500;
  display: inline-block;
  padding: 4px 8px;
  text-align: center;
  border-radius: $radius;
  color: $primary;
  margin-bottom: 15px;
  margin-right: 20px;
  cursor: pointer;
  flex: 1;
  background-color: $white;

  & + & {
    margin-left: $spacing;
  }
}

.isChecked {
  color: #fff;
  background-color: $primary;
  border-color: $primary;
}

.ignoreDefaultArrow {
  appearance: none;
  -webkit-appearance: none;
  -moz-appearance: none;
}

.selectWrapper {
  position: relative;
}

input[type="checkbox"] {
  display: none;
}
